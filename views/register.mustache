<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Register For A Process</title>
    <style>
        form {
            width: 50%;
            margin: 50px auto;
        }

        #notifier.error {
            color: #a40606;
        }

        #notifier.success {
            color: #326f00;
        }

        .contactable-type {
            display: none;
        }

        .show {
            display: block;
        }
    </style>

    <link rel="stylesheet" href="//fonts.googleapis.com/css?family=Roboto:300,300italic,700,700italic">
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.css">
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/milligram/1.3.0/milligram.css">
</head>

<body>
    <form action="{{formHandler}}" method="post">
        <div id="notifier"></div>
        {{^registrationClosed}}
        <div id="process-context">
            <h1>You are invited to join a rapid sensemaking process</h1>
            {{#showParticipantBlock}}
            <p>Registration is limited to {{maxParticipants}} participants.
                <br />{{participantCount}} have registered so far.</p>
            {{/showParticipantBlock}}
            {{#showTime}}
            <p>Registration will remain open for another <span id="remaining_time">{{remainingTime}}</span> seconds.</p>
            {{/showTime}}
            <h4>Facilitator Provided Description</h4>
            <p>{{processDescription}}</p>
        </div>
        <div>
            <label for="type">Contact Type</label>
            <select id="type" name="type">
                <option value="telegram">Telegram</option>
                <option value="phone">Phone</option>
                <option value="mattermost">Mattermost</option>
            </select>
        </div>
        <div class="contactable-type" id="phone">
            <label for="phone-number">Number</label>
            <input type="text" id="phone-number" name="phone-number" placeholder="+12223334444">
        </div>
        <div class="contactable-type" id="mattermost">
            <label for="mattermost-username">Username</label>
            <input type="text" id="mattermost-username" name="mattermost-username">
            <label for="mattermost-chat-server">Chat Server URL</label>
            <input type="text" id="mattermost-chat-server" name="mattermost-chat-server"
                placeholder="https://chat.server.org" value="https://">
        </div>
        <div class="contactable-type show" id="telegram">
            <label for="telegram-username">Username</label>
            <input type="text" id="telegram-username" name="telegram-username" autofocus>
        </div>
        <input type="hidden" id="id" name="id"></input>
        {{#isFacilitator}}
        <div class="float-right">
            <input type="checkbox" name="facilitator_complete">
            <label class="label-inline" for="facilitator_complete">Last Registration</label>
        </div>
        {{/isFacilitator}}
        <button class="button" type="submit">Register</button>
        {{/registrationClosed}}
        {{#registrationClosed}}
        <div id="process-context">
            Registration for this process has closed.
        </div>
        {{/registrationClosed}}
    </form>


    <script>

        // do countdown
        const remainingDiv = document.getElementById('remaining_time')
        if (remainingDiv) {
            let timeRemaining = parseInt(remainingDiv.innerText)
            window.setInterval(() => {
                timeRemaining--
                remainingDiv.innerText = timeRemaining
            }, 1000) // every 1 second
        }

        function checkForSuccess(field) {
            const url = window.location.href;
            if (url.indexOf('?' + field) != -1)
                return true;
            else if (url.indexOf('&' + field) != -1)
                return true;
            return false
        }

        // display feedback messages, according
        // to url query params
        if (checkForSuccess('success')) {
            document.getElementById('notifier').classList.add('success')
            document.getElementById('notifier').innerText = 'You were successfully registered'
        } else if (checkForSuccess('failure')) {
            document.getElementById('notifier').classList.add('error')
            document.getElementById('notifier').innerText = 'The input is invalid'
        }

        // handle the onchange events for the 'type' select field
        // toggling the display of particular form fields associated
        // with that type
        document.getElementById('type').onchange = event => {
            // the type from the option value
            const type = event.target.value

            // hide all the other type form fields
            const nodes = document.getElementsByClassName('contactable-type')
            for (let i = 0; nodes[i]; i++) {
                nodes[i].classList.remove('show')
            }
            // show the form field for the selected type
            nodes[type].classList.add('show')
        }

        // bind mattermost fields event listeners
        // to update the hidden id field
        function updateIdForMattermost() {
            const username = document.getElementById('mattermost-username').value
            const chatServer = document.getElementById('mattermost-chat-server').value
            document.getElementById('id').value = `${username}@${chatServer}`
        }
        document.getElementById('mattermost-username').onkeyup = updateIdForMattermost
        document.getElementById('mattermost-chat-server').onkeyup = updateIdForMattermost
        document.getElementById('mattermost-username').onchange = updateIdForMattermost
        document.getElementById('mattermost-chat-server').onchange = updateIdForMattermost


        // bind phone number fields event listeners
        // to update the hidden id field
        function updateIdForPhoneNumber() {
            document.getElementById('id').value = document.getElementById('phone-number').value
        }
        document.getElementById('phone-number').onkeyup = updateIdForPhoneNumber
        document.getElementById('phone-number').onchange = updateIdForPhoneNumber

        // bind telegram fields event listeners
        // to update the hidden id field
        function updateIdForTelegram() {
            document.getElementById('id').value = document.getElementById('telegram-username').value
        }
        document.getElementById('telegram-username').onkeyup = updateIdForTelegram
        document.getElementById('telegram-username').onchange = updateIdForTelegram
    </script>
</body>

</html>